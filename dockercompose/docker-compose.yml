version: '3.8'

volumes:
  postgres-data:

    null

  minio-data:

    null
services:
  app:
    image: golang:alpine
    restart: unless-stopped
    env_file:
      # Ensure that the variables in .env match the same variables in devcontainer.json
      - .env

    # Security Opt and cap_add allow for C++ based debuggers to work. 
    # See `runArgs`: https://github.com/Microsoft/vscode-docs/blob/main/docs/remote/devcontainerjson-reference.md
    #     security_opt:
    #       - seccomp:unconfined
    #     cap_add:
    #       - SYS_PTRACE

    volumes:
      - ./app:/app

    # Overrides default command so things don't shut down after the process ends.
    command: /app/app
    network_mode: service:nginx

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db
    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  # db:
  #   container_name: postgres
  #   image: postgres:latest
  #   restart: unless-stopped
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   env_file:
  #     # Ensure that the variables in .env match the same variables in devcontainer.json
  #     - .env
  #   # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
  #   # (Adding the "ports" property to this file will not forward from a Codespace.)

  storage:
    image: minio/minio:latest
    restart: unless-stopped
    volumes:
      - minio-data:/data
    env_file:
      # Ensure that the variables in .env match the same variables in devcontainer.json
      - .env
    # environment:
    #   - MINIO_ROOT_USER=root
    #   - MINIO_ROOT_PASSWORD=password
    # Add "forwardPorts": ["9000", "9001"] to **devcontainer.json** to forward minio locally.
    command: minio server /data --console-address ":9001"
    network_mode: service:nginx

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 9000:9000
      - 9001:9001
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web:/web:ro


    

    
